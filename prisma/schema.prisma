// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Usuario {
  id        Int      @id @default(autoincrement())
  nombre    String
  email     String   @unique
  rol       String   @default("usuario")
  prestamos Prestamo[]
  reservas  Reserva[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Libro {
  id          Int      @id @default(autoincrement())
  titulo      String
  autor       String
  genero      String
  isbn        String   @unique
  ejemplares  Int      @default(1)
  prestamos   Prestamo[]
  reservas    Reserva[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model Prestamo {
  id              Int        @id @default(autoincrement())
  libroId         Int
  usuarioId       Int
  fecha           DateTime   @default(now())
  fechaVencimiento DateTime
  fechaDevolucion DateTime?
  multa           Float?     @default(0.0)
  libro           Libro      @relation(fields: [libroId], references: [id])
  usuario         Usuario    @relation(fields: [usuarioId], references: [id])
}

model Reserva {
  id          Int      @id @default(autoincrement())
  libroId     Int
  usuarioId   Int
  fecha       DateTime @default(now())
  estado      String   @default("pendiente")
  libro       Libro    @relation(fields: [libroId], references: [id])
  usuario     Usuario  @relation(fields: [usuarioId], references: [id])
}
